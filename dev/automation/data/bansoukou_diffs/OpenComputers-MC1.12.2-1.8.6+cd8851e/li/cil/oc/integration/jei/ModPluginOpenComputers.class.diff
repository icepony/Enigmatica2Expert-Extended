@@ -5,15 +5,7 @@
  *  li.cil.oc.Settings$
  *  li.cil.oc.api.Items
  *  li.cil.oc.common.recipe.LootDiskCyclingRecipe
- *  li.cil.oc.integration.jei.CallbackDocHandler$
- *  li.cil.oc.integration.jei.CallbackDocHandler$CallbackDocRecipe
- *  li.cil.oc.integration.jei.CallbackDocHandler$CallbackDocRecipeCategory$
- *  li.cil.oc.integration.jei.CallbackDocHandler$CallbackDocRecipeHandler$
  *  li.cil.oc.integration.jei.LootDiskCyclingRecipeHandler$
- *  li.cil.oc.integration.jei.ManualUsageHandler$
- *  li.cil.oc.integration.jei.ManualUsageHandler$ManualUsageRecipe
- *  li.cil.oc.integration.jei.ManualUsageHandler$ManualUsageRecipeCategory$
- *  li.cil.oc.integration.jei.ManualUsageHandler$ManualUsageRecipeHandler$
  *  li.cil.oc.integration.jei.ModJEI$
  *  li.cil.oc.integration.jei.RelayGuiHandler$
  *  li.cil.oc.integration.util.ItemBlacklist$
@@ -27,7 +19,6 @@
  *  mezz.jei.api.JEIPlugin
  *  mezz.jei.api.gui.IAdvancedGuiHandler
  *  mezz.jei.api.ingredients.IModIngredientRegistration
- *  mezz.jei.api.recipe.IRecipeCategory
  *  mezz.jei.api.recipe.IRecipeCategoryRegistration
  *  mezz.jei.api.recipe.IRecipeWrapperFactory
  *  net.minecraft.client.gui.inventory.GuiContainer
@@ -45,15 +36,10 @@
  */
 package li.cil.oc.integration.jei;
 
-import java.util.Collection;
 import li.cil.oc.Settings$;
 import li.cil.oc.api.Items;
 import li.cil.oc.common.recipe.LootDiskCyclingRecipe;
-import li.cil.oc.integration.jei.CallbackDocHandler;
-import li.cil.oc.integration.jei.CallbackDocHandler$;
 import li.cil.oc.integration.jei.LootDiskCyclingRecipeHandler$;
-import li.cil.oc.integration.jei.ManualUsageHandler;
-import li.cil.oc.integration.jei.ManualUsageHandler$;
 import li.cil.oc.integration.jei.ModJEI$;
 import li.cil.oc.integration.jei.RelayGuiHandler$;
 import li.cil.oc.integration.util.ItemBlacklist$;
@@ -66,7 +52,6 @@ import mezz.jei.api.ISubtypeRegistry;
 import mezz.jei.api.JEIPlugin;
 import mezz.jei.api.gui.IAdvancedGuiHandler;
 import mezz.jei.api.ingredients.IModIngredientRegistration;
-import mezz.jei.api.recipe.IRecipeCategory;
 import mezz.jei.api.recipe.IRecipeCategoryRegistration;
 import mezz.jei.api.recipe.IRecipeWrapperFactory;
 import net.minecraft.client.gui.inventory.GuiContainer;
@@ -89,8 +74,6 @@ implements IModPlugin {
     private Function3<GuiContainer, Object, Object, StackOption> li$cil$oc$integration$jei$ModPluginOpenComputers$$stackUnderMouse;
 
     public void registerCategories(IRecipeCategoryRegistration registry) {
-        registry.addRecipeCategories(new IRecipeCategory[]{ManualUsageHandler.ManualUsageRecipeCategory$.MODULE$});
-        registry.addRecipeCategories(new IRecipeCategory[]{CallbackDocHandler.CallbackDocRecipeCategory$.MODULE$});
     }
 
     public void register(IModRegistry registry) {
@@ -98,12 +81,6 @@ implements IModPlugin {
             registry.handleRecipes(LootDiskCyclingRecipe.class, (IRecipeWrapperFactory)LootDiskCyclingRecipeHandler$.MODULE$, "minecraft.crafting");
         }
         ItemBlacklist$.MODULE$.hiddenItems().foreach((Function1)new /* Unavailable Anonymous Inner Class!! */);
-        ManualUsageHandler.ManualUsageRecipeCategory$.MODULE$.initialize(registry.getJeiHelpers().getGuiHelper());
-        CallbackDocHandler.CallbackDocRecipeCategory$.MODULE$.initialize(registry.getJeiHelpers().getGuiHelper());
-        registry.handleRecipes(ManualUsageHandler.ManualUsageRecipe.class, (IRecipeWrapperFactory)ManualUsageHandler.ManualUsageRecipeHandler$.MODULE$, ManualUsageHandler.ManualUsageRecipeCategory$.MODULE$.getUid());
-        registry.handleRecipes(CallbackDocHandler.CallbackDocRecipe.class, (IRecipeWrapperFactory)CallbackDocHandler.CallbackDocRecipeHandler$.MODULE$, CallbackDocHandler.CallbackDocRecipeCategory$.MODULE$.getUid());
-        registry.addRecipes((Collection)ManualUsageHandler$.MODULE$.getRecipes(registry), ManualUsageHandler.ManualUsageRecipeCategory$.MODULE$.getUid());
-        registry.addRecipes((Collection)CallbackDocHandler$.MODULE$.getRecipes(registry), CallbackDocHandler.CallbackDocRecipeCategory$.MODULE$.getUid());
         registry.addAdvancedGuiHandlers(new IAdvancedGuiHandler[]{RelayGuiHandler$.MODULE$});
         ModJEI$.MODULE$.ingredientRegistry_$eq(Option$.MODULE$.apply((Object)registry.getIngredientRegistry()));
     }
